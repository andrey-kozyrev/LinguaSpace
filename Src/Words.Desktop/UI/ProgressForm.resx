<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhEAE8APcAAP//////9///7/f/////3v/+5v//zP//veb/////pf/+tf//mf/31u/3/+b3//33
        pf/3lP/3jPfv3vfvzt7v///vjP/vhP/onP/nrb3x/9bm///mhO/mvc7m/8Xm/+vipO/ijO/er7Xo///e
        e8Xe/8ne8+relP/Yjr3e//7XhP/Wc+/Wmf/Wa63e//fWZubWjLXW/73T7/fOe63W/87Swf/MZujPhLXS
        8+bOe+bOc+/OWq3R4rXO1q3O76XO/8zMmffFWpzO9+7GTN7FcObFWubFY5nM//e9Sq3Fvei9WN69Y869
        hOa9PoTF/969OqW93t61UOa1Md+1QrW1nN6zOt61KbW1jHO9/4+145y1xcWuY96tIdqtKa2trcWtQoyt
        1mO1/+mVkq2lnOSYedalEbWjc4+lxc2eG5SctbacODGt/9aMWuaEc72UIb2UE7WMEa2MGnuJsoSEhKSE
        IHt7e5R7KYR0O4xzMXVtWXtrOnNrQmZmZmZmZmtjSmNaUlpaWv4BAgAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ACH/C05FVFNDQVBFMi4wAwEAAAAh+QQECgD/ACwAAAAAEAE8AAAI/wABCBxIsKDBgwgTKlzIsKHDhxAj
        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
</value>
  </data>
</root>